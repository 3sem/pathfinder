{\rtf1\ansi\ansicpg1251\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
The program converts pushdown automata to context-free grammar. \
\
The letters are numerated from 1 to let_quantity, where let_quantity - quantity of letters. z_\{0\}\'92s number is let_quantity + 1, \\epsilon is numerated by 0. Nonterminal symbols are numerated from let_quantity + 2, where let_quantity + 2 is start symbol. \
\
Input: \
V - the quantity of automata\'92s states\
E - the quantity of relations \
initial - initial state of automata\
let_quantity - quantity of letters \
Then E lines:\
u let stack_pop v stack_push_len a_\{1\}  a_\{2\} .. a_\{stack_push_len\}\
for each relation  (u, let, stack_pop) -> (v, a_1 \'85 a_\{stack_push_len\}), where u, v - states, let - the input, stack_pop - topmost stack symbol, a_\{1\}\'85a_\{stack_push_len\} - symbols added to the stack.   \
\
Output: \
N - quantity of rules in the new grammar;\
Then N lines: \
S len_right a_1 \'85 a_\{len_right\}\
S - nonterminal symbols on the left-hand side, len_right - length of the right-hand side, a_i - symbol of the right-hand side\
\
Example:\
Automata is attached in the file PDA2CFG.png\
Input:\
1 4\
0\
2\
0 0 3 0 1\
0\
0 1 3 0 2\
1 3\
0 1 1 0 2\
1 1\
0 2 1 0 1\
0\
Output:\
5\
4 1\
5 \
5 1\
0 \
5 3\
1 6 5 \
6 3\
1 6 6 \
6 1\
2 }